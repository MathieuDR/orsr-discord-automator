@using DiscordBot.Dashboard.Models
@using Serilog

    <Row>
        <Column>
            <Heading Size="HeadingSize.Is4"><Text TextWeight="TextWeight.Bold">owee</Text> configuration</Heading>
        </Column>
    </Row>

<Row>
    <Column ColumnSize="ColumnSize.Is12">
        <Heading Size="HeadingSize.Is5">General</Heading>
    </Column>

    <Column ColumnSize="ColumnSize.Is12">
        <Fields>
            <Field>
                <Switch TValue="bool">Enabled</Switch>
            </Field>
        </Fields>
    </Column>
</Row>

<Row>
    <Column ColumnSize="ColumnSize.Is12">
        <Heading Size="HeadingSize.Is5">Users</Heading>
    </Column>
    
    <Column ColumnSize="ColumnSize.Is12">
        <Field>
            <Switch TValue="bool" @bind-Checked="isUserWhiteList">Is whitelist</Switch>
        </Field>
   
        <UserlistSelector Users="@Users" FieldName="@UserListType"/>
    </Column>
</Row>

@code {
    [Inject]
    private INotificationService NotificationService { get; set; }
    
    [Inject]
    public ICachedDiscordService CachedDiscordService { get; set; }
    
    [Inject]
    public ILogger<DropperConfiguration> Logger { get; set; }

    [Parameter]
    public DropperConfigurationRequest Model { get; set; }
        
    [Parameter]
    public List<GuildUser> Users { get; set; }

    public string UserListType => isUserWhiteList ? "Whitelisted users" :"Blacklisted users";

    public bool isUserWhiteList = false;


    protected override Task OnParametersSetAsync() {
        try {
            if (Model is null) {
                throw new ArgumentException("No model", nameof(Model));
            }

            if (Users is null || Users.Count == 0) {
                throw new ArgumentException("No users", nameof(Users));
            }
        } catch (ArgumentException e) {
            _ = NotificationService.Error("Something went wrong. Please contact the admin");
            Logger.LogError(e, "Param set on dropperconfig");
        }
        return base.OnParametersSetAsync();
    }

}